"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[512],{4595:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>u,metadata:()=>c,toc:()=>h});var i=o(7462),n=(o(7294),o(3905)),r=(o(8209),o(4903)),a=o(1912),s=o(1166);const l="package pointerinput\n\nimport io.nacular.doodle.core.View\nimport io.nacular.doodle.event.PointerMotionListener.Companion.moved\n\nfun multiTouch(view: View) {\n//sampleStart\n    view.pointerMotionChanged += moved { event ->\n        event.targetInteractions  // the set of interactions with the target View\n        event.changedInteractions // the interactions that changed (triggered) this event\n        event.allInteractions     // all active interactions for the app\n    }\n//sampleEnd\n}\n",u={hide_title:!0},p="Multi-touch Support",c={unversionedId:"pointer_input/multitouch",id:"pointer_input/multitouch",title:"Multi-touch Support",description:"Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar scenarios. The  class contains information about all active s for the current event. This includes those directed at the event target. Apps are therefore able to incorporate this into their pointer handling.",source:"@site/docs/pointer_input/multitouch.mdx",sourceDirName:"pointer_input",slug:"/pointer_input/multitouch",permalink:"/doodle/docs/pointer_input/multitouch",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Pointer Motion Events",permalink:"/doodle/docs/pointer_input/pointermotion"},next:{title:"Keyboard Input",permalink:"/doodle/docs/keyboard"}},d={},h=[],m={toc:h},v="wrapper";function g(t){let{components:e,...o}=t;return(0,n.kt)(v,(0,i.Z)({},m,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"multi-touch-support"},"Multi-touch Support"),(0,n.kt)("p",null,"Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar scenarios. The ",(0,n.kt)(s.Ux6,null)," class contains information about all active ",(0,n.kt)(s.U4m,null),"s for the current event. This includes those directed at the event target. Apps are therefore able to incorporate this into their pointer handling."),(0,n.kt)(a.O,{mdxType:"KPlayground"},l),(0,n.kt)("p",null,"Doodle also does not limit simultaneous interactions to a single View. All active interactions will be sent to the appropriate Views and managed concurrently. This means it is possible to drag multiple items at the same time."),(0,n.kt)(r.l,{functionName:"positioning",args:"[2]",height:"400",mdxType:"DoodleApp"}),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Try moving both boxes at the same time if you are on a mobile device or have multiple pointers.")))}g.isMDXComponent=!0}}]);
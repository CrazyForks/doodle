"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[1168],{1884:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>u,default:()=>v,frontMatter:()=>l,metadata:()=>h,toc:()=>p});var i=n(7624),o=n(2172),s=n(7996),r=n(5720),a=n(3148),c=n(6080);const l={hide_title:!0,title:"Multi Touch"},u="Multi-touch",h={id:"user_input/multitouch",title:"Multi Touch",description:"Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar scenarios. The  class contains information about all active s for the current event. This includes those directed at the event target. Apps are therefore able to incorporate this into their pointer handling.",source:"@site/docs/user_input/multitouch.mdx",sourceDirName:"user_input",slug:"/user_input/multitouch",permalink:"/doodle/docs/user_input/multitouch",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_title:!0,title:"Multi Touch"}},d={},p=[];function m(t){const e={admonition:"admonition",h1:"h1",p:"p",...(0,o.M)(),...t.components};return a||f("api",!1),a.Interaction||f("api.Interaction",!0),a.PointerEvent||f("api.PointerEvent",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"multi-touch",children:"Multi-touch"}),"\n",(0,i.jsxs)(e.p,{children:["Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar scenarios. The ",(0,i.jsx)(a.PointerEvent,{})," class contains information about all active ",(0,i.jsx)(a.Interaction,{}),"s for the current event. This includes those directed at the event target. Apps are therefore able to incorporate this into their pointer handling."]}),"\n",(0,i.jsx)(r.A,{children:c.c}),"\n",(0,i.jsx)(e.p,{children:"Doodle also does not limit simultaneous interactions to a single View. All active interactions will be sent to the appropriate Views and managed concurrently. This means it is possible to drag multiple items at the same time."}),"\n",(0,i.jsx)(s.u,{functionName:"positioning",args:"[2]",height:"400"}),"\n",(0,i.jsxs)(e.admonition,{type:"tip",children:[(0,i.jsx)(e.p,{children:"Try moving both boxes at the same time if you are on a mobile device or have multiple pointers."}),(0,i.jsx)(e.admonition,{type:"tip"})]})]})}function v(t={}){const{wrapper:e}={...(0,o.M)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(m,{...t})}):m(t)}function f(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}},6080:(t,e,n)=>{n.d(e,{c:()=>i});const i="package pointerinput\n\nimport io.nacular.doodle.core.View\nimport io.nacular.doodle.event.PointerMotionListener.Companion.moved\n\nfun multiTouch(view: View) {\n//sampleStart\n    view.pointerMotionChanged += moved { event ->\n        event.targetInteractions  // the set of interactions with the target View\n        event.changedInteractions // the interactions that changed (triggered) this event\n        event.allInteractions     // all active interactions for the app\n    }\n//sampleEnd\n}\n"}}]);
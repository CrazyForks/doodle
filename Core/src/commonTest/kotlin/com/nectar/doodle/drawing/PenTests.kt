package com.nectar.doodle.drawing

import com.nectar.doodle.JsName
import com.nectar.doodle.drawing.Color.Companion.black
import com.nectar.doodle.drawing.Color.Companion.green
import com.nectar.doodle.drawing.Color.Companion.red
import com.nectar.doodle.drawing.Color.Companion.transparent
import kotlin.test.Test
import kotlin.test.expect

/**
 * Created by Nicholas Eddy on 3/21/20.
 */
private infix fun IntArray.contentEquals2(other: IntArray?): Boolean = when(other) {
    null -> false
    else -> this contentEquals other
}

class PenTests {
    @Test @JsName("defaultsCorrect")
    fun `defaults correct`() {
        Pen().apply {
            expect(black) { color     }
            expect(1.0  ) { thickness }
            expect(null ) { dashes    }
            expect(true ) { visible   }
        }
    }

    @Test @JsName("handlesDashVarArgs")
    fun `handles dash var args`() {
        Pen(dash = 1, remainingDashes = *intArrayOf(2, 3, 4)).apply {
            expect(true) { intArrayOf(1,2,3,4) contentEquals2 dashes }
        }
    }

    @Test @JsName("visibilityCorrect")
    fun `visibility correct`() {
        listOf(
            Pen(                            ) to true,
            Pen(color     = red             ) to true,
            Pen(color     = transparent     ) to false,
            Pen(color     = green opacity 0f) to false,
            Pen(thickness = 0.0             ) to false
        ).forEach {
            expect(it.second) { it.first.visible }
        }
    }
}
"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[197],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Hello Doodle","href":"/doodle/docs/introduction","docId":"introduction"},{"type":"link","label":"Installing Doodle","href":"/doodle/docs/installation","docId":"installation"},{"type":"link","label":"Applications","href":"/doodle/docs/applications","docId":"applications"},{"type":"link","label":"Views","href":"/doodle/docs/views","docId":"views"},{"type":"category","label":"Displaying Views","items":[{"type":"link","label":"The Display","href":"/doodle/docs/display/overview","docId":"display/overview"},{"type":"link","label":"Where\'s My View?","href":"/doodle/docs/display/gotchas","docId":"display/gotchas"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Layout","items":[{"type":"link","label":"Positioning","href":"/doodle/docs/layout/overview","docId":"layout/overview"},{"type":"link","label":"Using Layouts","href":"/doodle/docs/layout/layouts","docId":"layout/layouts"},{"type":"link","label":"Constraints","href":"/doodle/docs/layout/constraints","docId":"layout/constraints"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Transformations","href":"/doodle/docs/transforms","docId":"transforms"},{"type":"category","label":"Rendering","items":[{"type":"link","label":"Overview","href":"/doodle/docs/rendering/overview","docId":"rendering/overview"},{"type":"link","label":"Text","href":"/doodle/docs/rendering/text","docId":"rendering/text"},{"type":"link","label":"Images","href":"/doodle/docs/rendering/images","docId":"rendering/images"},{"type":"link","label":"Colors","href":"/doodle/docs/rendering/colors","docId":"rendering/colors"},{"type":"link","label":"3D","href":"/doodle/docs/rendering/3d","docId":"rendering/3d"},{"type":"link","label":"Behaviors","href":"/doodle/docs/rendering/behaviors","docId":"rendering/behaviors"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pointer Input","items":[{"type":"link","label":"Overview","href":"/doodle/docs/pointer_input/overview","docId":"pointer_input/overview"},{"type":"link","label":"Pointer Motion Events","href":"/doodle/docs/pointer_input/pointermotion","docId":"pointer_input/pointermotion"},{"type":"link","label":"Multi-touch Support","href":"/doodle/docs/pointer_input/multitouch","docId":"pointer_input/multitouch"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Keyboard Input","href":"/doodle/docs/keyboard","docId":"keyboard"},{"type":"link","label":"Drag & Drop","href":"/doodle/docs/dragdrop","docId":"dragdrop"},{"type":"category","label":"Component Library","items":[{"type":"link","label":"Catalog","href":"/doodle/docs/ui_components/overview","docId":"ui_components/overview"},{"type":"link","label":"Forms","href":"/doodle/docs/ui_components/form","docId":"ui_components/form"},{"type":"link","label":"Form Controls","href":"/doodle/docs/ui_components/form_controls","docId":"ui_components/form_controls"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Animations","href":"/doodle/docs/animations","docId":"animations"},{"type":"link","label":"Themes","href":"/doodle/docs/themes","docId":"themes"},{"type":"link","label":"Accessibility","href":"/doodle/docs/accessibility","docId":"accessibility"}]},"docs":{"accessibility":{"id":"accessibility","title":"Accessibility","description":"Making truly accessible apps is complex and requires familiarity with a wide range of concepts. The","sidebar":"tutorialSidebar"},"animations":{"id":"animations","title":"Animations","description":"Animations are key to making an app feel modern and interactive. Doodle helps you achieve this with a powerful yet simple set of APIs that let you animate a wide range of things into your app. Everything you need to build sophisticated animations is available via the Animator interface and its related components.","sidebar":"tutorialSidebar"},"applications":{"id":"applications","title":"Applications","description":"All Doodle apps run within an Application.","sidebar":"tutorialSidebar"},"display/gotchas":{"id":"display/gotchas","title":"Where\'s My View?","description":"Top-level Views are shown using the Display object","sidebar":"tutorialSidebar"},"display/overview":{"id":"display/overview","title":"The Display","description":"Top-level Views are shown using the Display object","sidebar":"tutorialSidebar"},"dragdrop":{"id":"dragdrop","title":"Drag & Drop","description":"Drag-and-drop is a form of data transfer between two Views or a View and an external component. The Views involved","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installing Doodle","description":"Get Doodle working for your web or desktop project so you can begin building your user interface.","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Hello Doodle","description":"Your first Doodle application.","sidebar":"tutorialSidebar"},"keyboard":{"id":"keyboard","title":"Keyboard Input","description":"Key handling is simple with Doodle. The first thing you need to do is include the KeyboardModule","sidebar":"tutorialSidebar"},"layout/constraints":{"id":"layout/constraints","title":"Constraints","description":"Doodle also supports a constraints based layout that uses linear equations to define placement. This approach lets you write equations that define how several anchor points on a View (i.e. top, bottom, left, right, CenterX, CenterY) will be placed relative to other Views and the parent View. This covers many of the common layout use cases and is easy to use.","sidebar":"tutorialSidebar"},"layout/layouts":{"id":"layout/layouts","title":"Using Layouts","description":"A Layout keeps track","sidebar":"tutorialSidebar"},"layout/overview":{"id":"layout/overview","title":"Positioning","description":"Every View has an x, y position (in pixels) relative to its parent. This is exactly where the View will be rendered--unless it (or an ancestor) also has","sidebar":"tutorialSidebar"},"pointer_input/multitouch":{"id":"pointer_input/multitouch","title":"Multi-touch Support","description":"Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar","sidebar":"tutorialSidebar"},"pointer_input/overview":{"id":"pointer_input/overview","title":"Overview","description":"Pointer handling is easy with Doodle. The first thing you need to do is include the PointerModule","sidebar":"tutorialSidebar"},"pointer_input/pointermotion":{"id":"pointer_input/pointermotion","title":"Pointer Motion Events","description":"Pointer motion events occur whenever a pointer moves within a View. They are treated separately from pointer events","sidebar":"tutorialSidebar"},"rendering/3d":{"id":"rendering/3d","title":"3D","description":"Canvas offers basic 3D capabilities through the use of AffineTransforms and Cameras. This enables Views to display","sidebar":"tutorialSidebar"},"rendering/behaviors":{"id":"rendering/behaviors","title":"Behaviors","description":"It is common to make a View\'s behavior and presentation configurable. In many cases this happens through properties like colors, fonts, etc.","sidebar":"tutorialSidebar"},"rendering/colors":{"id":"rendering/colors","title":"Colors","description":"Doodle supports RGBA colors via the Color","sidebar":"tutorialSidebar"},"rendering/images":{"id":"rendering/images","title":"Images","description":"Doodle allows you to load Images","sidebar":"tutorialSidebar"},"rendering/overview":{"id":"rendering/overview","title":"Overview","description":"Rendering is managed entirely by Views. Each View draws its content to the screen via the render","sidebar":"tutorialSidebar"},"rendering/text":{"id":"rendering/text","title":"Text","description":"Doodle is explicit about text rendering, and requires a location for all text drawn to a Canvas. The following View draw\'s \\"hello\\" at 0,0.","sidebar":"tutorialSidebar"},"themes":{"id":"themes","title":"Themes","description":"Doodle apps can use Themes","sidebar":"tutorialSidebar"},"transforms":{"id":"transforms","title":"Transformations","description":"Views are bound to a 2D grid when it comes to their layout. This grid only allows a View to have an x and y position, and an area within the plane.","sidebar":"tutorialSidebar"},"ui_components/form":{"id":"ui_components/form","title":"Forms","description":"Doodle forms make data collection simple, while still preserving flexibility to build just the right experience. They hide a lot of the","sidebar":"tutorialSidebar"},"ui_components/form_controls":{"id":"ui_components/form_controls","title":"Form Controls","description":"Doodle has many built-in controls that cover a range of data types for forms. These controls come as functions that return FieldVisualizers.","sidebar":"tutorialSidebar"},"ui_components/overview":{"id":"ui_components/overview","title":"Catalog","description":"Doodle has several UI components in the Controls library. Here are a few of the common ones. Access these by adding a dependency to","sidebar":"tutorialSidebar"},"views":{"id":"views","title":"Views","description":"App building blocks","sidebar":"tutorialSidebar"}}}')}}]);
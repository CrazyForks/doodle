"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[644],{6e3:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=o(7462),n=(o(7294),o(3905));o(8209);const i={hide_title:!0},r="Images",l={unversionedId:"rendering/images",id:"rendering/images",title:"Images",description:"Doodle allows you to load Images",source:"@site/docs/rendering/images.mdx",sourceDirName:"rendering",slug:"/rendering/images",permalink:"/doodle/docs/rendering/images",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Text",permalink:"/doodle/docs/rendering/text"},next:{title:"Colors",permalink:"/doodle/docs/rendering/colors"}},d={},s=[{value:"Draw images onto Canvas",id:"draw-images-onto-canvas",level:3}],m={toc:s};function p(e){let{components:a,...o}=e;return(0,n.kt)("wrapper",(0,t.Z)({},m,o,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"images"},"Images"),(0,n.kt)("p",null,"Doodle allows you to load ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/image/Image.kt#L6"},(0,n.kt)("inlineCode",{parentName:"a"},"Image")),"s\ninto your app for rendering using the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/image/ImageLoader.kt#L3"},(0,n.kt)("inlineCode",{parentName:"a"},"ImageLoader")),".\nThis loader is available to apps via the ",(0,n.kt)("inlineCode",{parentName:"p"},"ImageModule"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'import kotlinx.coroutines.GlobalScope\n\nclass SimpleImageApp(display: Display, imageLoader: ImageLoader): Application {\n    init {\n        GlobalScope.launch {\n            val image: Image? = imageLoader.load("some_image_url")\n\n            // won\'t get here until load resolves\n            image?.let {\n                display += Photo(it)\n            }\n        }\n    }\n}\n')),(0,n.kt)("p",null,"This app tries to load and render an image. Notice that ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/image/ImageLoader.kt#L11"},(0,n.kt)("inlineCode",{parentName:"a"},"ImageLoader.load")),"\nreturns ",(0,n.kt)("inlineCode",{parentName:"p"},"Image?"),", which is ",(0,n.kt)("inlineCode",{parentName:"p"},"null")," when the image fails to load for some reason."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"load")," method is suspending, so it much be called from another ",(0,n.kt)("inlineCode",{parentName:"p"},"suspend")," method or from a coroutine scope.")),(0,n.kt)("h3",{id:"draw-images-onto-canvas"},"Draw images onto Canvas"),(0,n.kt)("p",null,"The method for doing this allows you to customize how the image drawing by specify the following."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Source")," rectangular in the image"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Destination")," rectangle to draw into"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Opacity")," to draw the image with"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Radius")," for the image corners")))}p.isMDXComponent=!0}}]);
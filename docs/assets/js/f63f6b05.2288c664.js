"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[114],{3422:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>m,contentTitle:()=>y,default:()=>g,frontMatter:()=>h,metadata:()=>u,toc:()=>v});var n=i(7462),t=(i(7294),i(3905)),l=(i(8209),i(1912)),o=i(1166);const p="package display\n\nimport io.nacular.doodle.application.Application\nimport io.nacular.doodle.application.application\nimport io.nacular.doodle.core.Display\nimport org.kodein.di.instance\n\n//sampleStart\nclass MyApp(display: Display): Application {\n    init {\n        // ...\n    }\n\n    override fun shutdown() {}\n}\n\nfun main() {\n    application {\n        MyApp(display = instance())\n    }\n}\n//sampleEnd",s="package display\n\nimport io.nacular.doodle.application.Application\nimport io.nacular.doodle.core.Display\nimport io.nacular.doodle.core.view\n\n//sampleStart\nclass AddViewApp(display: Display): Application {\n    init {\n        val view = view {}\n\n        display += view\n    }\n\n    override fun shutdown() { /*...*/ }\n}\n//sampleEnd",d="package display\n\nimport io.nacular.doodle.application.application\nimport org.kodein.di.instance\n\nfun topLevelLaunch() {\n//sampleStart\n    application(modules = listOf(/*...*/)) {\n        MyApp(display = instance() /*,...*/)\n    }\n//sampleEnd\n}",r="package display\n\nimport io.nacular.doodle.application.application\nimport org.kodein.di.instance\nimport org.w3c.dom.HTMLElement\n\nfun embeddedLaunch(element: HTMLElement) {\n//sampleStart\n    application(element, modules = listOf(/*...*/)) {\n        MyApp(display = instance() /*,...*/)\n    }\n//sampleEnd\n}",c="package display\n\nimport io.nacular.doodle.application.Application\nimport io.nacular.doodle.core.Display\nimport io.nacular.doodle.core.view\n\n//sampleStart\nclass RemoveViewApp(display: Display): Application {\n    init {\n        val view = view {}\n\n        display -= view\n    }\n\n    override fun shutdown() { /*...*/ }\n}\n//sampleEnd",h={hide_title:!0,title:"The Display",description:"Top-level Views are shown using the Display object"},y="The Display",u={unversionedId:"display/overview",id:"display/overview",title:"The Display",description:"Top-level Views are shown using the Display object",source:"@site/docs/display/overview.mdx",sourceDirName:"display",slug:"/display/overview",permalink:"/doodle/docs/display/overview",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0,title:"The Display",description:"Top-level Views are shown using the Display object"},sidebar:"tutorialSidebar",previous:{title:"Views",permalink:"/doodle/docs/views"},next:{title:"Where's My View?",permalink:"/doodle/docs/display/gotchas"}},m={},v=[{value:"An app&#39;s root container",id:"an-apps-root-container",level:2},{value:"Adding Views to the Display",id:"adding-views-to-the-display",level:2},{value:"Launch mode changes the Display",id:"launch-mode-changes-the-display",level:2}],k={toc:v},w="wrapper";function g(e){let{components:a,...i}=e;return(0,t.kt)(w,(0,n.Z)({},k,i,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"the-display"},"The Display"),(0,t.kt)("h2",{id:"an-apps-root-container"},"An app's root container"),(0,t.kt)("p",null,"The ",(0,t.kt)(o.sSl,null)," holds an app's ",(0,t.kt)(o.G7x,null)," hierarchy, and behaves like a basic container. It is not a View however, so many of the capabilities of Views are not available for the Display."),(0,t.kt)("admonition",{type:"tip"},(0,t.kt)("p",{parentName:"admonition"},(0,t.kt)("a",{parentName:"p",href:"/doodle/docs/layout/overview"},"Layouts")," can be applied to the Display as well.")),(0,t.kt)("p",null,"The Display is available for injection by default."),(0,t.kt)(l.O,{mdxType:"KPlayground"},p),(0,t.kt)("h2",{id:"adding-views-to-the-display"},"Adding Views to the Display"),(0,t.kt)("p",null,"The ",(0,t.kt)(o.sSl,null)," has a ",(0,t.kt)(o.qms,null)," property that contains all its direct descendants. These top-level views have no ",(0,t.kt)(o.h3R,null)," and are the top-most ancestors of all other Views in an app. An app can have any number of these Views."),(0,t.kt)("admonition",{type:"caution"},(0,t.kt)("p",{parentName:"admonition"},"Top-level Views are displayed, yet they have no ",(0,t.kt)(o.h3R,null),". Similarly, Views can have parents even before they are in the display hierarchy: when the parents themselves are not displayed. This means the ",(0,t.kt)(o.h3R,null)," property says nothing about a View being in the Display hierarchy. Luckily, View has the ",(0,t.kt)(o.OF3,null)," property for this exact purpose.")),(0,t.kt)("p",null,"Add a top-level View like this."),(0,t.kt)(l.O,{mdxType:"KPlayground"},s),(0,t.kt)("p",null,"And remove it like this."),(0,t.kt)(l.O,{mdxType:"KPlayground"},c),(0,t.kt)("h2",{id:"launch-mode-changes-the-display"},"Launch mode changes the Display"),(0,t.kt)("p",null,"A ",(0,t.kt)("a",{parentName:"p",href:"/doodle/docs/applications#top-level-apps"},(0,t.kt)("strong",{parentName:"a"},"Stand-Alone"))," Web app that uses the entire page will have a Display tied to the page body. While one hosted in an element will have a Display that is tied to that element."),(0,t.kt)("p",null,"This is transparent to the app."),(0,t.kt)(l.O,{mdxType:"KPlayground"},d),(0,t.kt)("p",null,"Here the Display will be tied to ",(0,t.kt)("inlineCode",{parentName:"p"},"someDiv"),"."),(0,t.kt)(l.O,{mdxType:"KPlayground"},r),(0,t.kt)("p",null,"The Displays for a ",(0,t.kt)("a",{parentName:"p",href:"/doodle/docs/applications#nested-apps"},(0,t.kt)("strong",{parentName:"a"},"Nested app"))," sits within the View hosting it. This means changes to that View's size will change the Display size."))}g.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[929],{6943:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return r},toc:function(){return c},default:function(){return u}});var a=t(7462),i=t(3366),p=(t(7294),t(3905)),o=["components"],l={hide_title:!0,title:"Applications"},s="Creating Applications",r={unversionedId:"applications",id:"applications",isDocsHomePage:!1,title:"Applications",description:"All Doodle apps run within an Application.",source:"@site/docs/applications.mdx",sourceDirName:".",slug:"/applications",permalink:"/docs/applications",tags:[],version:"current",frontMatter:{hide_title:!0,title:"Applications"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Creating Views",permalink:"/docs/views"}},c=[{value:"App Launch",id:"app-launch",children:[{value:"Top-level Apps",id:"top-level-apps",children:[],level:3},{value:"Nested Apps",id:"nested-apps",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2}],d={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,p.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"creating-applications"},"Creating Applications"),(0,p.kt)("p",null,"All Doodle apps run within an ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/application/Application.kt#L6"},(0,p.kt)("inlineCode",{parentName:"a"},"Application")),".\nIt is the entry-point for your business logic, and often the first class you write. Doodle fully initializes your app at constructor time,\nso there is no additional ",(0,p.kt)("em",{parentName:"p"},"run")," or ",(0,p.kt)("em",{parentName:"p"},"start")," method to implement. You can provide custom tear-down logic via the ",(0,p.kt)("inlineCode",{parentName:"p"},"shutdown")," method though."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-kotlin"},'class UsefulApp: Application {\n    init {\n        println("Hi!")\n    }\n\n    override fun shutdown() {}\n}\n')),(0,p.kt)("h2",{id:"app-launch"},"App Launch"),(0,p.kt)("p",null,"You can either launch an app ",(0,p.kt)("strong",{parentName:"p"},"top-level"),", or ",(0,p.kt)("strong",{parentName:"p"},"nested")," within another app. The Application class does not change regardless of the\nlaunch mode. That is because apps have no knowledge of the mode they will run in, making them independent of browser concepts by default."),(0,p.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,p.kt)("div",{parentName:"div",className:"admonition-heading"},(0,p.kt)("h5",{parentName:"div"},(0,p.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,p.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,p.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,p.kt)("div",{parentName:"div",className:"admonition-content"},(0,p.kt)("p",{parentName:"div"},"Doodle does not expose any browser or desktop-specific concepts to apps. The launch step is the only place where HTML elements are directly accepted\nfor Web apps, and this is only to support running Doodle apps within a non-Doodle page."))),(0,p.kt)("h3",{id:"top-level-apps"},"Top-level Apps"),(0,p.kt)("p",null,"Most apps will run independent of others and exist purely within the context of a page, or element within it (for Web apps). Use the ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Browser/src/jsMain/kotlin/io/nacular/doodle/application/Application.kt#L65"},(0,p.kt)("inlineCode",{parentName:"a"},"application")),"\nfunction to launch apps this way. The result is a full-screen experience by default, with the app taking up the entire page and control all\naspects of it. You can also provide an HTML element when launching a top-level app. This allows you to host Doodle apps in non-Doodle contexts.\nThe apps in this documentation are top-level within specific elements."),(0,p.kt)("p",null,"Closing the page cleans up any apps within it. Removing the element hosting an app or explicitly calling ",(0,p.kt)("inlineCode",{parentName:"p"},"shutdown")," has the same effect."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun main() {\n    // launch full-screen\n    application {\n        UsefulApp()\n    }\n}\n")),(0,p.kt)("h3",{id:"nested-apps"},"Nested Apps"),(0,p.kt)("p",null,"Doodle Web apps can also be run within other Doodle Web apps. This is done by placing the nested app in a ",(0,p.kt)("a",{parentName:"p",href:"/docs/views"},(0,p.kt)("strong",{parentName:"a"},"View")),"\nthat the host app manages. An app launched this way has the same functionality as a top-level one. Its lifecycle however, is tied to\nthe host View."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"title=InnerApp.kt",title:"InnerApp.kt"},"\nclass InnerApp(display: Display): Application {\n    init {\n        // add stuff to display\n    }\n\n    // ...\n\n    override fun shutdown() { /*...*/ }\n}\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"title=OuterApp.kt",title:"OuterApp.kt"},"\nclass OuterApp(display: Display, appView: ApplicationViewFactory): Application {\n    init {\n        display += appView {\n            InnerApp(display = instance()) // inner app initialization\n        }\n    }\n\n    override fun shutdown() {}\n}\n\nfun main() {\n    application(modules = listOf(AppViewModule)) {\n        OuterApp(display = instance(), appView = instance())\n    }\n}\n")),(0,p.kt)("p",null,"Use an ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Browser/src/jsMain/kotlin/io/nacular/doodle/application/ApplicationView.kt#L20"},(0,p.kt)("inlineCode",{parentName:"a"},"ApplicationViewFactory")),"\nto create nested apps. This class is available via the ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Browser/src/jsMain/kotlin/io/nacular/doodle/application/ApplicationView.kt#L27"},(0,p.kt)("inlineCode",{parentName:"a"},"AppViewModule")),"\nmodule."),(0,p.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,p.kt)("div",{parentName:"div",className:"admonition-heading"},(0,p.kt)("h5",{parentName:"div"},(0,p.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,p.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,p.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,p.kt)("div",{parentName:"div",className:"admonition-content"},(0,p.kt)("p",{parentName:"div"},"Adding a nested app's View to the ",(0,p.kt)("a",{parentName:"p",href:"/docs/display"},(0,p.kt)("strong",{parentName:"a"},"Display"))," triggers the app's initialization. Shutdown\nthe app by removing the host View from the Display."))),(0,p.kt)("h2",{id:"dependencies"},"Dependencies"),(0,p.kt)("p",null,"Doodle uses ",(0,p.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Dependency_injection"},"dependency injection")," when creating apps. The\nlambda provided when launching an app is actually a ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/Kodein-Framework/Kodein-DI"},"Kodein")," binding\ncontext that lets you inject instances from Doodle modules, or your own."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-kotlin"},'import io.nacular.doodle.application.application\nimport io.nacular.doodle.application.Modules.Companion.PointerModule\nimport org.kodein.di.instance\n\nfun main() {\n    application(modules = listOf(\n        PointerModule,\n        // ...,\n        Module(name = "A Custom Module") {\n            // custom Kodein bind statements\n        },\n        /*...*/) {\n        MyApp(instance())\n    })\n}\n')))}u.isMDXComponent=!0}}]);
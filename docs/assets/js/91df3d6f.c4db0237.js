"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[512],{3125:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=o(7462),i=(o(7294),o(3905)),a=(o(8209),o(4903));const r={hide_title:!0},s="Multi-touch Support",l={unversionedId:"pointer_input/multitouch",id:"pointer_input/multitouch",title:"Multi-touch Support",description:"Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar",source:"@site/docs/pointer_input/multitouch.mdx",sourceDirName:"pointer_input",slug:"/pointer_input/multitouch",permalink:"/doodle/docs/pointer_input/multitouch",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Pointer Motion Events",permalink:"/doodle/docs/pointer_input/pointermotion"},next:{title:"Keyboard Input",permalink:"/doodle/docs/keyboard"}},u={},p=[],c={toc:p};function d(t){let{components:e,...o}=t;return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multi-touch-support"},"Multi-touch Support"),(0,i.kt)("p",null,"Pointer events support multiple, simultaneous inputs by default. This covers the multi-touch use-case on mobile and other similar\nscenarios. The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/event/PointerEvent.kt#L33"},(0,i.kt)("inlineCode",{parentName:"a"},"PointerEvent")),"\nclass contains information about all active ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/event/PointerEvent.kt#L17"},(0,i.kt)("inlineCode",{parentName:"a"},"Interaction")),"s\nfor the current event. This includes those directed at the event target. Apps are therefore able to incorporate this into their pointer handling."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"view.pointerMotionChanged += moved { event ->\n    event.targetInteractions  // the set of interactions with the target View\n    event.changedInteractions // the interactions that changed (triggered) this event\n    event.allInteractions     // all active interactions for the app\n}\n")),(0,i.kt)("p",null,"Doodle also does not limit simultaneous interactions to a single View. All active interactions will be sent to the appropriate Views\nand managed concurrently. This means it is possible to drag multiple items at the same time."),(0,i.kt)(a.l,{functionName:"positioning",args:"[2]",height:"400",mdxType:"DoodleApp"}),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Try moving both boxes at the same time if you are on a mobile device or have multiple pointers.")))}d.isMDXComponent=!0}}]);
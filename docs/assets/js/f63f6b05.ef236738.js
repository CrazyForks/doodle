"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[114],{92:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var i=t(7462),n=(t(7294),t(3905));t(8209);const s={hide_title:!0,title:"The Display",description:"Top-level Views are shown using the Display object"},l="The Display",p={unversionedId:"display/overview",id:"display/overview",title:"The Display",description:"Top-level Views are shown using the Display object",source:"@site/docs/display/overview.mdx",sourceDirName:"display",slug:"/display/overview",permalink:"/doodle/docs/display/overview",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0,title:"The Display",description:"Top-level Views are shown using the Display object"},sidebar:"tutorialSidebar",previous:{title:"Views",permalink:"/doodle/docs/views"},next:{title:"Where's My View?",permalink:"/doodle/docs/display/gotchas"}},o={},d=[{value:"An app&#39;s root container",id:"an-apps-root-container",level:2},{value:"Adding Views to the Display",id:"adding-views-to-the-display",level:2},{value:"Launch mode changes the Display",id:"launch-mode-changes-the-display",level:2}],r={toc:d};function h(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,i.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-display"},"The Display"),(0,n.kt)("h2",{id:"an-apps-root-container"},"An app's root container"),(0,n.kt)("p",null,"The Display holds an app's View hierarchy, and behaves like a basic container. It is not a View however, so many of the capabilities\nof Views are not available for the Display."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"/doodle/docs/layout/overview"},"Layouts")," can be applied to the Display as well.")),(0,n.kt)("p",null,"The Display is available for injection by default."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MyApp(display: Display): Application {\n    init {\n        // ...\n    }\n\n    override fun shutdown() {}\n}\n\nfun main() {\n    application {\n        MyApp(display = instance())\n    }\n}\n")),(0,n.kt)("h2",{id:"adding-views-to-the-display"},"Adding Views to the Display"),(0,n.kt)("p",null,"The Display has a ",(0,n.kt)("inlineCode",{parentName:"p"},"children")," property that contains all its direct descendants. These top-level views have no\n",(0,n.kt)("inlineCode",{parentName:"p"},"parent")," and are the top-most ancestors of all other Views in an app. An app can have any number of these Views."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Top-level Views are displayed, yet they have no ",(0,n.kt)("inlineCode",{parentName:"p"},"parent"),". Similarly, Views can have parents even before they are\nin the display hierarchy: when the parents themselves are not displayed. This means the ",(0,n.kt)("inlineCode",{parentName:"p"},"parent")," property says nothing\nabout a View being in the Display hierarchy. Luckily, View has the ",(0,n.kt)("inlineCode",{parentName:"p"},"displayed")," property for this exact purpose.")),(0,n.kt)("p",null,"Add a top-level View like this."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MyApp(display: Display): View() {\n    init {\n        display += view\n    }\n    // ...\n}\n")),(0,n.kt)("p",null,"And remove it like this."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MyApp(display: Display): View() {\n    init {\n        display -= view\n    }\n    // ...\n}\n")),(0,n.kt)("h2",{id:"launch-mode-changes-the-display"},"Launch mode changes the Display"),(0,n.kt)("p",null,"A ",(0,n.kt)("a",{parentName:"p",href:"/doodle/docs/applications#top-level-apps"},(0,n.kt)("strong",{parentName:"a"},"Stand-Alone"))," Web app that uses the entire page will have a Display tied to the page body. While\none hosted in an element will have a Display that is tied to that element."),(0,n.kt)("p",null,"This is transparent to the app."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"application(modules = listOf(/*...*/)) {\n    MyApp(display = instance() /*,...*/)\n}\n")),(0,n.kt)("p",null,"Here the Display will be tied to ",(0,n.kt)("inlineCode",{parentName:"p"},"someDiv"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},"application(root = someDiv, modules = listOf(/*...*/)) {\n    MyApp(display = instance() /*,...*/)\n}\n")),(0,n.kt)("p",null,"The Displays for a ",(0,n.kt)("a",{parentName:"p",href:"/doodle/docs/applications#nested-apps"},(0,n.kt)("strong",{parentName:"a"},"Nested app"))," sits within the View hosting it. This means changes to that View's\nsize will change the Display size."))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[132],{3905:function(e,r,o){o.d(r,{Zo:function(){return u},kt:function(){return f}});var t=o(7294);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function a(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function l(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?a(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function i(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=t.createContext({}),s=function(e){var r=t.useContext(c),o=r;return e&&(o="function"==typeof e?e(r):l(l({},r),e)),o},u=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(o),f=n,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return o?t.createElement(m,l(l({ref:r},u),{},{components:o})):t.createElement(m,l({ref:r},u))}));function f(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<a;s++)l[s]=o[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,o)}d.displayName="MDXCreateElement"},124:function(e,r,o){o.r(r),o.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var t=o(3117),n=o(102),a=(o(7294),o(3905)),l=["components"],i={hide_title:!0},c="Colors",s={unversionedId:"rendering/colors",id:"rendering/colors",title:"Colors",description:"Doodle supports RGBA colors via the Color",source:"@site/docs/rendering/colors.mdx",sourceDirName:"rendering",slug:"/rendering/colors",permalink:"/doodle/docs/rendering/colors",tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Images",permalink:"/doodle/docs/rendering/images"},next:{title:"Behaviors",permalink:"/doodle/docs/rendering/behaviors"}},u={},p=[{value:"HSL and HSV Colors",id:"hsl-and-hsv-colors",level:3}],d={toc:p};function f(e){var r=e.components,o=(0,n.Z)(e,l);return(0,a.kt)("wrapper",(0,t.Z)({},d,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"colors"},"Colors"),(0,a.kt)("p",null,"Doodle supports RGBA colors via the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Core/src/commonMain/kotlin/io/nacular/doodle/drawing/Color.kt#L12"},(0,a.kt)("inlineCode",{parentName:"a"},"Color")),"\nclass. It uses this for things like ",(0,a.kt)("inlineCode",{parentName:"p"},"foregroundColor")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"backgroundColor"),", and with Strokes and Paints."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"val color1 = Color(0xff0000u) // create red\nval color2 = Color(0xffffffu, alpha = 0.5f) // white with 0.5 alpha\n")),(0,a.kt)("p",null,"Doodle also has a small set of common colors predefined."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"canvas.rect(rect, Color.Blue.paint) // use helper to generate Paint from predefined color\n")),(0,a.kt)("h3",{id:"hsl-and-hsv-colors"},"HSL and HSV Colors"),(0,a.kt)("p",null,"Sometimes it is more effective to work within other color spaces. There are two other color classes for doing this. These colors cannot be used\ndirectly with Views or Paints, but they have methods for easily transforming to and from RGBA."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/ColorPicker.kt#L46"},(0,a.kt)("inlineCode",{parentName:"a"},"ColorPicker"))," controls uses HSV internally for example."))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[724],{8690:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>ne,contentTitle:()=>te,default:()=>re,frontMatter:()=>ee,metadata:()=>ae,toc:()=>le});var n=a(7462),l=(a(7294),a(3905)),o=(a(8209),a(5488)),r=a(5162),i=a(4903);const m={toc:[]};function p(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["text"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'textField(pattern = Regex(".+"))\n')),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Requires a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/text/TextField.kt#L16"},(0,l.kt)("inlineCode",{parentName:"a"},"TextFieldBehavior")),".\nThe module ",(0,l.kt)("inlineCode",{parentName:"p"},"NativeTextFieldBehavior")," provides one."))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pattern")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Regex")),(0,l.kt)("td",{parentName:"tr",align:null},"Initial filter for any text input. Text that fails this will invalidate the field.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"encoder")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Encoder<T, String>")),(0,l.kt)("td",{parentName:"tr",align:null},"Translates text to an instance of ",(0,l.kt)("inlineCode",{parentName:"td"},"T")," if possible, or invalidates the field.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"validator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(T) -> Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Validates the decoded ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"TextFieldConfig<T>.() -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the view.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are other signatures for common types like pure text.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"TextField")),(0,l.kt)("p",{parentName:"admonition"},"Text field that can generate a value of types ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),".")))}p.isMDXComponent=!0;const d={toc:[]};function s(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["radio"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'radioList("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"first")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:null},"First option.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"rest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"vararg T")),(0,l.kt)("td",{parentName:"tr",align:null},"Remaining options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"OptionListConfig<T>.() -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the view.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: Container of ",(0,l.kt)("inlineCode",{parentName:"p"},"RadioButton"),"s"),(0,l.kt)("p",{parentName:"admonition"},"List of buttons that requires selection of a single item.")))}s.isMDXComponent=!0;const k={toc:[]};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["singleChoiceList"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'singleChoiceList("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"first")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:null},"First item in the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"vararg rest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:null},"Remaining items in the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"itemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for each item in the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fitContents")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Sets whether the list should fit its contents.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(List<T, LisModel<T>) -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the list.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are simpler signatures for common data types like text and numbers.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: List"),(0,l.kt)("p",{parentName:"admonition"},"List that requires selection of a single item.")))}u.isMDXComponent=!0;const c={toc:[]};function N(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["optionalRadio"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'optionalRadioList("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"first")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:null},"First option.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"rest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"vararg T")),(0,l.kt)("td",{parentName:"tr",align:null},"Remaining options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"OptionListConfig<T>.() -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the view.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T?"),", View: Container of ",(0,l.kt)("inlineCode",{parentName:"p"},"RadioButton"),"s"),(0,l.kt)("p",{parentName:"admonition"},"List of buttons that allows selection of zero or one item.")))}N.isMDXComponent=!0;const g={toc:[]};function h(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["optionalSingleChoiceList"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'optionalSingleChoiceList("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ListModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Model used to populate the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"itemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for each item in the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fitContents")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Sets whether the list should fit its contents.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(List<T, LisModel<T>) -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the list.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are simpler signatures for common data types like text and numbers.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: List"),(0,l.kt)("p",{parentName:"admonition"},"List that allows selection of zero or one item.")))}h.isMDXComponent=!0;const b={toc:[]};function T(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["check"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'check("Some question")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"label")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"View")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String"))))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckBox")),(0,l.kt)("p",{parentName:"admonition"},"Check-box that represents a true/false value.")))}T.isMDXComponent=!0;const y={toc:[]};function f(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["checkList"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'checkList("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"first")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:null},"First option.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"rest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"vararg T")),(0,l.kt)("td",{parentName:"tr",align:null},"Remaining options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"OptionListConfig<T>.() -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the view.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"List<T>"),", View: Container of ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckBox"),"es"),(0,l.kt)("p",{parentName:"admonition"},"List of check-boxes that allows selection of zero or more items.")))}f.isMDXComponent=!0;const C={toc:[]};function x(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},C,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["switch"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'switch("Some question")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"label")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"View")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String"))))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Switch")),(0,l.kt)("p",{parentName:"admonition"},"Switch that represents a true/false value.")))}x.isMDXComponent=!0;const v={toc:[]};function w(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["switchList"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'switchList("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"first")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:null},"First option.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"rest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"vararg T")),(0,l.kt)("td",{parentName:"tr",align:null},"Remaining options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"OptionListConfig<T>.() -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the view.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"List<T>"),", View: Container of ",(0,l.kt)("inlineCode",{parentName:"p"},"Switch"),"es"),(0,l.kt)("p",{parentName:"admonition"},"List of switches that allows selection of zero or more items.")))}w.isMDXComponent=!0;const D={toc:[]};function I(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},D,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["list"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'list("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ListModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Model used to populate the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"itemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for each item in the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fitContents")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"Sets whether the list should fit its contents.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(List<T, LisModel<T>) -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the list.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are simpler signatures for common data types like text and numbers.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"List<T>"),", View: Container of ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckBox"),"s"),(0,l.kt)("p",{parentName:"admonition"},"List that allows selection of zero or more items.")))}I.isMDXComponent=!0;const L={toc:[]};function Z(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},L,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["spinner"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'spinner("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SpinnerModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Model used to populate the spinner.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"itemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, Spinner<T, M>>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for items in the spinner.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(Spinner<T, M>) -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the spinner.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are simpler signatures for common data types like text and numbers.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Spinner")),(0,l.kt)("p",{parentName:"admonition"},"Spinner that that requires selection of a single item.")))}Z.isMDXComponent=!0;const M={toc:[]};function S(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},M,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["dropDown"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'dropDown("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ListModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Model used to populate the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boxItemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for the box item in the drop down.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"listItemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for each item in the drop down's list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(Dropdown<T, *>) -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the list.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are simpler signatures for common data types like text and numbers.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Dropdown")),(0,l.kt)("p",{parentName:"admonition"},"Dropdown that that requires selection of a single item.")))}S.isMDXComponent=!0;const V={toc:[]};function F(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},V,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["optionalDropDown"]',height:"200",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'optionalDropDown("Item1", "Item2", "Item3")\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ListModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Model used to populate the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boxItemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for the box item in the drop down.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"listItemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<T, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for each item in the drop down's list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"unselectedBoxItemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<Unit, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer used for the box item when nothing selected.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"unselectedListItemVisualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ItemVisualizer<Unit, IndexedItem>")),(0,l.kt)("td",{parentName:"tr",align:null},'Visualizer used for the "select none" item in the drop down\'s list.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(Dropdown<T, *>) -> Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows configuration of the list.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are simpler signatures for common data types like text and numbers.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T?"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Dropdown")),(0,l.kt)("p",{parentName:"admonition"},"Dropdown that that allows selection of zero or one item.")))}F.isMDXComponent=!0;const z={toc:[]};function B(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},z,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["slider"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"slider(0 .. 100)\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ConfinedValueModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"model used for the Slider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"orientation")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Orientation")),(0,l.kt)("td",{parentName:"tr",align:null},"Slider's orientation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SliderConfig<T>.()")),(0,l.kt)("td",{parentName:"tr",align:null},"configuration block")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Slider<T>")),(0,l.kt)("p",{parentName:"admonition"},"Slider that represents a bounded, numeric value.")))}B.isMDXComponent=!0;const X={toc:[]};function A(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},X,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["circularSlider"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"circularSlider(0 .. 100)\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ConfinedValueModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"model used for the Slider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SliderConfig<T>.()")),(0,l.kt)("td",{parentName:"tr",align:null},"configuration block")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"CircularSlider<T>")),(0,l.kt)("p",{parentName:"admonition"},"Slider that represents a bounded, numeric value.")))}A.isMDXComponent=!0;const U={toc:[]};function R(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},U,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["rangeSlider"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"rangeSlider(0 .. 100)\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ConfinedRangeModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"model used for the Slider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"orientation")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Orientation")),(0,l.kt)("td",{parentName:"tr",align:null},"Slider's orientation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SliderConfig<T>.()")),(0,l.kt)("td",{parentName:"tr",align:null},"configuration block")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"ClosedRange<T>"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"RangeSlider<T>")),(0,l.kt)("p",{parentName:"admonition"},"Slider that represents a bounded, numeric range.")))}R.isMDXComponent=!0;const P={toc:[]};function _(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},P,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["circularRangeSlider"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"circularRangeSlider(0 .. 100)\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"model")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ConfinedRangeModel<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"model used for the Slider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"config")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SliderConfig<T>.()")),(0,l.kt)("td",{parentName:"tr",align:null},"configuration block")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"ClosedRange<T>"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"CircularRangeSlider<T>")),(0,l.kt)("p",{parentName:"admonition"},"Slider that represents a bounded, numeric range.")))}_.isMDXComponent=!0;const O={toc:[]};function q(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},O,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["file"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"file()\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"acceptedTypes")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Set<MimeType<*>>")),(0,l.kt)("td",{parentName:"tr",align:null},"File types to allow")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"LocalFile"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"FileSelector")),(0,l.kt)("p",{parentName:"admonition"},"FileSelector that represents a local file.")))}q.isMDXComponent=!0;const G={toc:[]};function H(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},G,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["files"]',height:"150",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"files()\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"acceptedTypes")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Set<MimeType<*>>")),(0,l.kt)("td",{parentName:"tr",align:null},"File types to allow")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"List<LocalFile>"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"FileSelector")),(0,l.kt)("p",{parentName:"admonition"},"FileSelector that represents a list of local files.")))}H.isMDXComponent=!0;const Y={toc:[]};function E(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},Y,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["labeled"]',height:"220",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'labeled("Name", help = "Help text") { field {  } }\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"StyledText")),(0,l.kt)("td",{parentName:"tr",align:null},"To display for the field.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"help")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"StyledText")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional help text to display along with the field.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"showRequired")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"RequiredIndicatorStyle?")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines whether or how to indicate the field is required using a text decorator.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"visualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"LabeledConfig.() -> FieldVisualizer<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer that creates the wrapped control.")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Some of these parameters are optional.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Container")),(0,l.kt)("p",{parentName:"admonition"},"Wrapper around a control that adds name and other labeling.")))}E.isMDXComponent=!0;const j={toc:[]};function W(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},j,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["scrolling"]',height:"200",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"scrolling {\n    scrollPanel.idealSize = // ...\n    field {  }\n}\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"visualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ScrollingConfig.() -> FieldVisualizer<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer that creates the wrapped control.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"ScrollPanel")),(0,l.kt)("p",{parentName:"admonition"},"ScrollPanel wrapper for a control that allows scrolling.")))}W.isMDXComponent=!0;const $={toc:[]};function J(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},$,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["framed"]',height:"200",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"framed {\n    // configure the container builder\n    insets = Insets(10.0)\n    render = {\n        rect(bounds.atOrigin, radius = 10.0, fill = Lightgray.paint)\n    }\n    field {  }\n}\n"))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"visualizer")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ContainerBuilder.() -> FieldVisualizer<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer that creates the wrapped control.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Container")),(0,l.kt)("p",{parentName:"admonition"},"Container wrapper for a control that can be styled and laid out.")))}J.isMDXComponent=!0;const K={toc:[]};function Q(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},K,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"formControls",args:'["form"]',height:"200",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"usage",label:"Basic Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'form { this(\n   initial.map { it.name } to labeled("Name") { textField() },\n   initial.map { it.age  } to labeled("Age" ) { textField(encoder = ToStringIntEncoder) },\n   onInvalid = {}\n) { name, age ->\n   Person(name, age) // construct result when valid\n} }\n'))),(0,l.kt)(r.Z,{value:"parameters",label:"Parameters",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"builder")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"FormControlBuildContext<T>.() -> FieldVisualizer<T>")),(0,l.kt)("td",{parentName:"tr",align:null},"Visualizer that creates the form.")))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", View: ",(0,l.kt)("inlineCode",{parentName:"p"},"Form")),(0,l.kt)("p",{parentName:"admonition"},"Sub-form that allows entering of arbitrary fields that will be mapped to a single, strongly typed result ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),".")))}Q.isMDXComponent=!0;const ee={hide_title:!0},te="Form Controls",ae={unversionedId:"ui_components/form_controls",id:"ui_components/form_controls",title:"Form Controls",description:"Doodle has many built-in controls that cover a range of data types for forms. These controls come as functions that return FieldVisualizers.",source:"@site/docs/ui_components/form_controls.mdx",sourceDirName:"ui_components",slug:"/ui_components/form_controls",permalink:"/doodle/docs/ui_components/form_controls",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Forms",permalink:"/doodle/docs/ui_components/form"},next:{title:"Animations",permalink:"/doodle/docs/animations"}},ne={},le=[{value:"<code>textField</code>",id:"textfield",level:3},{value:"<code>radioList</code>",id:"radiolist",level:3},{value:"<code>singleChoiceList</code>",id:"singlechoicelist",level:3},{value:"<code>optionalRadioList</code>",id:"optionalradiolist",level:3},{value:"<code>optionalSingleChoiceList</code>",id:"optionalsinglechoicelist",level:3},{value:"<code>check</code>",id:"check",level:3},{value:"<code>checkList</code>",id:"checklist",level:3},{value:"<code>switch</code>",id:"switch",level:3},{value:"<code>switchList</code>",id:"switchlist",level:3},{value:"<code>list</code>",id:"list",level:3},{value:"<code>spinner</code>",id:"spinner",level:3},{value:"<code>dropDown</code>",id:"dropdown",level:3},{value:"<code>optionalDropDown</code>",id:"optionaldropdown",level:3},{value:"<code>slider</code>",id:"slider",level:3},{value:"<code>circularSlider</code>",id:"circularslider",level:3},{value:"<code>raneSlider</code>",id:"raneslider",level:3},{value:"<code>circularRangeSlider</code>",id:"circularrangeslider",level:3},{value:"<code>file</code>",id:"file",level:3},{value:"<code>files</code>",id:"files",level:3},{value:"<code>labeled</code>",id:"labeled",level:3},{value:"<code>scrolling</code>",id:"scrolling",level:3},{value:"<code>framed</code>",id:"framed",level:3},{value:"<code>form</code>",id:"form",level:3},{value:"Custom Controls",id:"custom-controls",level:2}],oe={toc:le};function re(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},oe,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"form-controls"},"Form Controls"),(0,l.kt)("p",null,"Doodle has many built-in controls that cover a range of data types for forms. These controls come as functions that return ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/Form.kt#L18"},(0,l.kt)("inlineCode",{parentName:"a"},"FieldVisualizer")),"s.\nThey are all found within the ",(0,l.kt)("inlineCode",{parentName:"p"},"io.nacular.doodle.controls.form")," package."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Usage of these controls still require explicit installation of ",(0,l.kt)("a",{parentName:"p",href:"/doodle/docs/rendering/behaviors"},(0,l.kt)("inlineCode",{parentName:"a"},"Behavior")),"s. Those shown below use behaviors from the\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Themes/src/commonMain/kotlin/io/nacular/doodle/theme/basic/BasicTheme.kt#L125"},(0,l.kt)("inlineCode",{parentName:"a"},"BasicTheme"))," or\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Browser/src/jsMain/kotlin/io/nacular/doodle/theme/native/NativeTheme.kt#L47"},(0,l.kt)("inlineCode",{parentName:"a"},"NativeTheme")),".")),(0,l.kt)("h3",{id:"textfield"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L73"},(0,l.kt)("inlineCode",{parentName:"a"},"textField"))),(0,l.kt)(p,{mdxType:"TextField"}),(0,l.kt)("h3",{id:"radiolist"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L271"},(0,l.kt)("inlineCode",{parentName:"a"},"radioList"))),(0,l.kt)(s,{mdxType:"RadioList"}),(0,l.kt)("h3",{id:"singlechoicelist"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L856"},(0,l.kt)("inlineCode",{parentName:"a"},"singleChoiceList"))),(0,l.kt)(u,{mdxType:"SingleChoiceList"}),(0,l.kt)("h3",{id:"optionalradiolist"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L304"},(0,l.kt)("inlineCode",{parentName:"a"},"optionalRadioList"))),(0,l.kt)(N,{mdxType:"OptionalRadioList"}),(0,l.kt)("h3",{id:"optionalsinglechoicelist"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L760"},(0,l.kt)("inlineCode",{parentName:"a"},"optionalSingleChoiceList"))),(0,l.kt)(h,{mdxType:"OptionalSingleChoiceList"}),(0,l.kt)("h3",{id:"check"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L150"},(0,l.kt)("inlineCode",{parentName:"a"},"check"))),(0,l.kt)(T,{mdxType:"Check"}),(0,l.kt)("h3",{id:"checklist"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L339"},(0,l.kt)("inlineCode",{parentName:"a"},"checkList"))),(0,l.kt)(f,{mdxType:"CheckList"}),(0,l.kt)("h3",{id:"switch"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L192"},(0,l.kt)("inlineCode",{parentName:"a"},"switch"))),(0,l.kt)(x,{mdxType:"Switch"}),(0,l.kt)("h3",{id:"switchlist"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L354"},(0,l.kt)("inlineCode",{parentName:"a"},"switchList"))),(0,l.kt)(w,{mdxType:"SwitchList"}),(0,l.kt)("h3",{id:"list"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L729"},(0,l.kt)("inlineCode",{parentName:"a"},"list"))),(0,l.kt)(I,{mdxType:"List"}),(0,l.kt)("h3",{id:"spinner"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/spinner/Spinner.kt#L18"},(0,l.kt)("inlineCode",{parentName:"a"},"spinner"))),(0,l.kt)(Z,{mdxType:"Spinner"}),(0,l.kt)("h3",{id:"dropdown"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L382"},(0,l.kt)("inlineCode",{parentName:"a"},"dropDown"))),(0,l.kt)(S,{mdxType:"DropDown"}),(0,l.kt)("h3",{id:"optionaldropdown"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"optionalDropDown"))),(0,l.kt)(F,{mdxType:"OptionalDropDown"}),(0,l.kt)("h3",{id:"slider"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"slider"))),(0,l.kt)(B,{mdxType:"Slider"}),(0,l.kt)("h3",{id:"circularslider"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"circularSlider"))),(0,l.kt)(A,{mdxType:"CircularSlider"}),(0,l.kt)("h3",{id:"raneslider"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"raneSlider"))),(0,l.kt)(R,{mdxType:"RangeSlider"}),(0,l.kt)("h3",{id:"circularrangeslider"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"circularRangeSlider"))),(0,l.kt)(_,{mdxType:"CircularRangeSlider"}),(0,l.kt)("h3",{id:"file"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"file"))),(0,l.kt)(q,{mdxType:"File"}),(0,l.kt)("h3",{id:"files"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L548"},(0,l.kt)("inlineCode",{parentName:"a"},"files"))),(0,l.kt)(H,{mdxType:"Files"}),(0,l.kt)("h3",{id:"labeled"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L888"},(0,l.kt)("inlineCode",{parentName:"a"},"labeled"))),(0,l.kt)(E,{mdxType:"Labeled"}),(0,l.kt)("h3",{id:"scrolling"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L1034"},(0,l.kt)("inlineCode",{parentName:"a"},"scrolling"))),(0,l.kt)(W,{mdxType:"Scrolling"}),(0,l.kt)("h3",{id:"framed"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L1047"},(0,l.kt)("inlineCode",{parentName:"a"},"framed"))),(0,l.kt)(J,{mdxType:"Framed"}),(0,l.kt)("h3",{id:"form"},(0,l.kt)("a",{parentName:"h3",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/FormControls.kt#L1062"},(0,l.kt)("inlineCode",{parentName:"a"},"form"))),(0,l.kt)(Q,{mdxType:"Form"}),(0,l.kt)("h2",{id:"custom-controls"},"Custom Controls"),(0,l.kt)("p",null,"Doodle makes it easy to create ",(0,l.kt)("a",{parentName:"p",href:"/doodle/docs/ui_components/form#creating-fields"},"custom form controls"),". You simply implement ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/Form.kt#L18"},(0,l.kt)("inlineCode",{parentName:"a"},"FieldVisualizer")),"\nor use the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/Form.kt#L42"},(0,l.kt)("inlineCode",{parentName:"a"},"field")),"\nDSL. Each control is a simple binding between a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nacular/doodle/blob/master/Controls/src/commonMain/kotlin/io/nacular/doodle/controls/form/Form.kt#L99"},(0,l.kt)("inlineCode",{parentName:"a"},"Field")),",\nits initial value and a ",(0,l.kt)("inlineCode",{parentName:"p"},"View"),"."),(0,l.kt)("p",null,"Here is an example of how you might add a ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," field with some text."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun switchField(text: StyledText) = field<Boolean> {\n    container {\n        focusable = false // ensure wrapping container isn't focusable\n        this += Label(text).apply {\n            fitText             = setOf(Height)\n            horizontalAlignment = Left\n        }\n        this += Switch().apply {\n            initial.ifValid { selected = it } // adopt initial value if present\n\n            selectedChanged += { _,_,_ ->\n                state = Valid(selected) // update field as switch changes\n            }\n\n            size  = Size(40, 25)\n            state = Valid(selected) // ensure field is valid at beginning\n        }\n\n        layout = constrain(children[0], children[1]) { label, switch ->\n            switch.left    eq parent.right - 10 - switch.width.readOnly\n            switch.centerY eq parent.centerY\n\n            label.left     eq 10\n            label.right    eq switch.left - 10\n            label.centerY  eq switch.centerY\n        }\n    }\n}\n")),(0,l.kt)(i.l,{functionName:"customForm",height:"200",mdxType:"DoodleApp"}),(0,l.kt)("p",null,"Here's an example of a simple color strip."),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,l.kt)(i.l,{functionName:"customColorStrip",height:"200",mdxType:"DoodleApp"})),(0,l.kt)(r.Z,{value:"implementation",label:"Implementation",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun colorStrip(first: Color, second: Color, vararg rest: Color, size: Double = 30.0) = field<Color> {\n    container {\n        focusable = false // ensure wrapping container isn't focusable\n        val buttonGroup = ButtonGroup()\n        this += listOf(first, second, *rest).map { color ->\n            // use toggle button since it has desirable selection behavior\n            ToggleButton().apply {\n                this.size = Size(size)\n                behavior = simpleButtonRenderer { button, canvas ->\n                    val radius    = width * 0.2\n                    val thickness = 2.0\n                    val fillColor = if (button.model.pointerOver) color.lighter() else color\n\n                    when {\n                        selected -> canvas.rect(bounds.atOrigin.inset(thickness / 2), radius = radius, color = fillColor, stroke = Stroke(color.inverted, thickness = thickness))\n                        else     -> canvas.rect(bounds.atOrigin, radius = radius, color = fillColor)\n                    }\n                }\n\n                acceptsThemes = false\n\n                selectedChanged += { _,_,_ ->\n                    if (selected) {\n                        state = Valid(color) // update field state when selected\n                    }\n                }\n\n                initial.ifValid {\n                    selected = it == color // adopt initial value if it matches something in the list\n                }\n\n                buttonGroup += this // ensure only 1 item is ever selected\n            }\n        }\n\n        layout = HorizontalFlowLayout(spacing = 4.0)\n    }\n}\n"))),(0,l.kt)(r.Z,{value:"usage",label:"Usage",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'Form { this(\n    Green to colorStrip(Red, Green, Blue, BlueColor, Black),\n    onInvalid = {}\n) { color ->\n    println("Form valid: $color")\n}\n')))))}re.isMDXComponent=!0}}]);
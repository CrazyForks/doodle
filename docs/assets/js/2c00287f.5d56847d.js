"use strict";(self.webpackChunkdoodle_docs=self.webpackChunkdoodle_docs||[]).push([[9952],{876:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>r,default:()=>w,frontMatter:()=>d,metadata:()=>h,toc:()=>m});var t=i(7624),o=i(4552),a=(i(7793),i(6236),i(7492)),l=(i(5272),i(3220));const p='import io.nacular.doodle.application.Application\n\n//sampleStart\nclass UsefulApp: Application {\n    init {\n        println("Hi!")\n    }\n\n    override fun shutdown() {}\n}\n//sampleEnd',s='package applications\n\nimport io.nacular.doodle.application.Modules.Companion.PointerModule\nimport io.nacular.doodle.application.application\nimport org.kodein.di.DI.Module\nimport org.kodein.di.instance\n\n//sampleStart\nfun main() {\n    application(modules = listOf(\n        PointerModule,\n        // ...,\n        Module(name = "A Custom Module") {\n            // custom Kodein bind statements\n        },\n        /*...*/)) {\n        MyApp(instance())\n    }\n}\n//sampleEnd',c="package usefulapp\n\nimport UsefulApp\nimport io.nacular.doodle.application.application\n\n//sampleStart\nfun main() {\n    // launch full-screen\n    application {\n        UsefulApp()\n    }\n}\n//sampleEnd",d={hide_title:!0,title:"Applications"},r=void 0,h={id:"applications",title:"Applications",description:"Applications",source:"@site/docs/applications.mdx",sourceDirName:".",slug:"/applications",permalink:"/doodle/docs/applications",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{hide_title:!0,title:"Applications"},sidebar:"tutorialSidebar",previous:{title:"Whats New \u2728",permalink:"/doodle/docs/whatsnew"},next:{title:"Views",permalink:"/doodle/docs/views"}},u={},m=[{value:"Applications",id:"applications",level:2},{value:"Launching an application",id:"launching-an-application",level:2},{value:"Top-level applications",id:"top-level-applications",level:2},{value:"Nested applications (Web)",id:"nested-applications-web",level:2},{value:"Modularity",id:"modularity",level:2}];function f(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",strong:"strong",...(0,o.M)(),...n.components};return l.m||x("api",!1),l.m.Application||x("api.Application",!0),l.m.ApplicationLaunch||x("api.ApplicationLaunch",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"applications",children:"Applications"}),"\n",(0,t.jsxs)(e.p,{children:["All Doodle apps run within an ",(0,t.jsx)(l.m.Application,{}),". It is the entry-point for your business logic, and often the first class you write. Doodle fully initializes your app at constructor time, so there is no additional ",(0,t.jsx)(e.em,{children:"run"})," or ",(0,t.jsx)(e.em,{children:"start"})," method to implement. You can provide custom tear-down logic via the ",(0,t.jsx)(e.code,{children:"shutdown"})," method though."]}),"\n",(0,t.jsx)(a.A,{children:p}),"\n",(0,t.jsx)(e.h2,{id:"launching-an-application",children:"Launching an application"}),"\n",(0,t.jsxs)(e.p,{children:["You can either launch an app ",(0,t.jsx)(e.strong,{children:"top-level"}),", or ",(0,t.jsx)(e.strong,{children:"nested"})," within another app (web). The Application class does not change regardless of the launch mode. That is because apps have no knowledge of the mode they will run in, making them independent of platform concepts by default."]}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"App launch is platform-specific, allowing apps to customize their setup based on this context."})}),"\n",(0,t.jsx)(e.h2,{id:"top-level-applications",children:"Top-level applications"}),"\n",(0,t.jsxs)(e.p,{children:["Most apps will run independent of others and exist purely within the context of a window. Use the ",(0,t.jsx)(l.m.ApplicationLaunch,{})," function to launch apps this way. The result is a full-screen experience, with the app taking up the entire window and controlling all aspects of it."]}),"\n",(0,t.jsx)(a.A,{children:c}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsxs)(e.p,{children:["Doodle web apps can also be ",(0,t.jsx)(e.a,{href:"platform_specific/web#host-apps-in-html-elements",children:"hosted in HTML elements"}),"."]})}),"\n",(0,t.jsx)(e.h2,{id:"nested-applications-web",children:"Nested applications (Web)"}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsxs)(e.p,{children:["Doodle web apps can also be run ",(0,t.jsx)(e.a,{href:"platform_specific/web#nested-apps",children:"within other Doodle Web apps"}),"."]})}),"\n",(0,t.jsx)(e.h2,{id:"modularity",children:"Modularity"}),"\n",(0,t.jsxs)(e.p,{children:["Doodle uses ",(0,t.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Dependency_injection",children:"dependency injection"})," when creating apps. The lambda provided when launching an app is actually a ",(0,t.jsx)(e.a,{href:"https://github.com/Kodein-Framework/Kodein-DI",children:"Kodein"})," binding context that lets you inject instances from Doodle modules, or your own."]}),"\n",(0,t.jsx)(a.A,{children:s})]})}function w(n={}){const{wrapper:e}={...(0,o.M)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(f,{...n})}):f(n)}function x(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);